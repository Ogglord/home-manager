export ZSHRC_LAST_LOADED="$(date '+%Y-%m-%d %H:%M:%S')"

# History settings
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history
#setopt appendhistory
setopt hist_ignore_dups  # ignore duplicate commands in history
setopt hist_ignore_space  # ignore commands that start with a space
setopt hist_verify  # verify the command before executing it from history
# try to find a suggestion from your history first
# then find a suggestion from the completion engine
ZSH_AUTOSUGGEST_STRATEGY=(completion)
autoload -Uz compinit

# load autocompletions (is this breaking anything?)
#autoload -U +X compinit && compinit

# where do you want to store your plugins?
export ZPLUGINDIR="$HOME/.config/zsh/plugins"

# no need for a plugin manager <3
function plugin-load {
  local repo plugdir initfile initfiles=()
  : ${ZPLUGINDIR:=${ZDOTDIR:-~/.config/zsh}/plugins}
  for repo in $@; do
    plugdir=$ZPLUGINDIR/${repo:t}
    initfile=$plugdir/${repo:t}.plugin.zsh
    if [[ ! -d $plugdir ]]; then
      echo "Cloning $repo..."
      git clone -q --depth 1 --recursive --shallow-submodules \
        https://github.com/$repo $plugdir
    fi
    if [[ ! -e $initfile ]]; then
      initfiles=($plugdir/*.{plugin.zsh,zsh-theme,zsh,sh}(N))
      (( $#initfiles )) || { echo >&2 "No init file found '$repo'." && continue }
      ln -sf $initfiles[1] $initfile
    fi
    fpath+=$plugdir
    (( $+functions[zsh-defer] )) && zsh-defer . $initfile || . $initfile
  done
}


# don't resolve symlinks and ignore symlinked home in ostree distros
export _Z_NO_RESOLVE_SYMLINKS=1
export _Z_EXCLUDE_DIRS=("/var/home")

# make list of the Zsh plugins you use
repos=(
  # plugins that you want loaded first
  #sindresorhus/pure
  agkozak/agkozak-zsh-prompt

  # Essentially, if you add romkatv/zsh-defer to your plugins list, 
  # everything you load afterwards will use zsh-defer, 
  # meaning you'll get speeds similar to zinit's turbo mode.
  #romkatv/zsh-defer

  # other plugins
  zsh-users/zsh-completions
  rupa/z
  # ...

  # plugins you want loaded last
  zsh-users/zsh-syntax-highlighting
  zsh-users/zsh-history-substring-search
  zsh-users/zsh-autosuggestions  ## some bug causing zsh to crash
)

rm -f ~/.zcompdump; compinit

# now load your plugins
plugin-load $repos

function plugin-update {
  ZPLUGINDIR="$HOME/.config/zsh/plugins"
  for d in $ZPLUGINDIR/*/.git(/); do
    echo "Updating ${d:h:t}..."
    command git -C "${d:h}" pull --ff --recurse-submodules --depth 1 --rebase --autostash
  done
}

function plugin-list {  
  #ls $ZPLUGINDIR
  for d in $ZPLUGINDIR/*/.git; do
    git -C "${d:h}" remote get-url origin
  done
}

exec-new-zsh() {
  zle -I
  exec zsh <$TTY
}

zle -N exec-new-zsh
bindkey '^N' exec-new-zsh

#
# source local zsrc.d/* files if they exist
#

typeset -ga _zshrcd=(
  $ZSHRCD
  ${ZDOTDIR:-/dev/null}/zshrc.d(N)
  ${HOME}/.zshrc.d(N)
  ${ZDOTDIR:-$HOME}/.config/zsh/zshrc.d(N)
)
if [[ ! -e "$_zshrcd[1]" ]]; then
  echo >&2 "zshrc.d: dir not found HOME or ZDOTDIR path!"
  return 1
fi

typeset -ga _zshrcd=("$_zshrcd[1]"/*.{sh,zsh}(N))
typeset -g _zshrcd_file
for _zshrcd_file in ${(o)_zshrcd}; do
  [[ ${_zshrcd_file:t} != '~'* ]] || continue  # ignore tilde files
  source "$_zshrcd_file"
done
unset _zshrcd{,_file}